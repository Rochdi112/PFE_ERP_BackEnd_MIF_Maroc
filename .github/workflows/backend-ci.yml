name: Backend CI

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: erp_test
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_pass
        ports:
          - "5432:5432"
        options: >-
          --health-cmd="pg_isready -U test_user -d erp_test"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest-cov ruff black isort mypy bandit pip-audit

      - name: Lint with ruff
        run: ruff check app

      - name: Format check with black
        run: black --check app

      - name: Import sorting check with isort
        run: isort --check-only app

      - name: Type check with mypy
        run: mypy app

      - name: Security audit with bandit
        run: bandit -r app

      - name: Dependency audit with pip-audit
        run: pip-audit -r requirements.txt

      - name: Run tests
        env:
          DATABASE_URL: postgresql://test_user:test_pass@localhost:5432/erp_test
          SECRET_KEY: test-secret-key-for-ci
          FILES_ENC_KEY: test-fernet-key-for-ci-only
        run: pytest --cov=app --cov-report=xml --cov-report=term-missing

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          flags: backend
          name: backend-coverage
