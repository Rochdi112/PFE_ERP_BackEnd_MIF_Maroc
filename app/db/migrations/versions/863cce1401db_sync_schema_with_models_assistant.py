"""sync schema with models (assistant)

Revision ID: 863cce1401db
Revises: df44b376bc8a
Create Date: 2025-08-29 03:04:19.850240

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '863cce1401db'
down_revision: Union[str, Sequence[str], None] = 'df44b376bc8a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Create DB ENUM types first to ensure columns that reference them can be created/altered safely.
    # Use idempotent DO blocks so repeated runs won't fail if the type already exists.
    op.execute("""
    DO $$
    BEGIN
        IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'statutpaiement') THEN
            CREATE TYPE statutpaiement AS ENUM ('en_attente', 'payee', 'en_retard');
        END IF;
    END$$;
    """)
    op.execute("""
    DO $$
    BEGIN
        IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'typemouvement') THEN
            CREATE TYPE typemouvement AS ENUM ('entree', 'sortie', 'ajustement', 'retour');
        END IF;
    END$$;
    """)
    op.execute("""
    DO $$
    BEGIN
        IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'typeclient') THEN
            CREATE TYPE typeclient AS ENUM ('entreprise', 'collectivite', 'association', 'particulier');
        END IF;
    END$$;
    """)
    op.execute("""
    DO $$
    BEGIN
        IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'niveauservice') THEN
            CREATE TYPE niveauservice AS ENUM ('premium', 'standard', 'basique');
        END IF;
    END$$;
    """)
    op.execute("""
    DO $$
    BEGIN
        IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'niveaucompetence') THEN
            CREATE TYPE niveaucompetence AS ENUM ('debutant', 'intermediaire', 'avance', 'expert');
        END IF;
    END$$;
    """)
    op.execute("""
    DO $$
    BEGIN
        IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'typecontrat') THEN
            CREATE TYPE typecontrat AS ENUM ('maintenance_preventive', 'maintenance_corrective', 'maintenance_complete', 'support_technique', 'contrat_cadre');
        END IF;
    END$$;
    """)
    op.execute("""
    DO $$
    BEGIN
        IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'statutcontrat') THEN
            CREATE TYPE statutcontrat AS ENUM ('brouillon', 'en_cours', 'expire', 'resilie', 'suspendu');
        END IF;
    END$$;
    """)
    op.execute("""
    DO $$
    BEGIN
        IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'modefacturation') THEN
            CREATE TYPE modefacturation AS ENUM ('mensuel', 'trimestriel', 'annuel');
        END IF;
    END$$;
    """)
    op.execute("""
    DO $$
    BEGIN
        IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'prioriteintervention') THEN
            CREATE TYPE prioriteintervention AS ENUM ('urgente', 'haute', 'normale', 'basse', 'programmee');
        END IF;
    END$$;
    """)
    op.execute("""
    DO $$
    BEGIN
        IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'frequenceplanning') THEN
            CREATE TYPE frequenceplanning AS ENUM ('journalier', 'hebdomadaire', 'mensuel', 'trimestriel', 'semestriel', 'annuel');
        END IF;
    END$$;
    """)
    op.execute("""
    DO $$
    BEGIN
        IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'statutplanning') THEN
            CREATE TYPE statutplanning AS ENUM ('actif', 'suspendu', 'termine', 'en_retard');
        END IF;
    END$$;
    """)
    op.execute("""
    DO $$
    BEGIN
        IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'reporttype') THEN
            CREATE TYPE reporttype AS ENUM ('interventions', 'equipements', 'techniciens', 'clients', 'dashboard', 'planning', 'stock', 'financial');
        END IF;
    END$$;
    """)
    op.execute("""
    DO $$
    BEGIN
        IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'reportformat') THEN
            CREATE TYPE reportformat AS ENUM ('pdf', 'excel', 'csv', 'json');
        END IF;
    END$$;
    """)
    op.execute("""
    DO $$
    BEGIN
        IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'reportstatus') THEN
            CREATE TYPE reportstatus AS ENUM ('pending', 'generating', 'completed', 'failed', 'expired');
        END IF;
    END$$;
    """)
    op.execute("""
    DO $$
    BEGIN
        IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'disponibilitetechnicien') THEN
            CREATE TYPE disponibilitetechnicien AS ENUM ('disponible', 'occupe', 'conge', 'formation', 'indisponible');
        END IF;
    END$$;
    """)
    op.create_table('pieces_detachees',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nom', sa.String(length=255), nullable=False),
    sa.Column('reference', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('marque', sa.String(length=100), nullable=True),
    sa.Column('modele', sa.String(length=100), nullable=True),
    sa.Column('stock_actuel', sa.Integer(), nullable=False),
    sa.Column('stock_minimum', sa.Integer(), nullable=False),
    sa.Column('stock_maximum', sa.Integer(), nullable=True),
    sa.Column('prix_unitaire', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('cout_achat', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('devise', sa.String(length=3), nullable=True),
    sa.Column('fournisseur', sa.String(length=255), nullable=True),
    sa.Column('reference_fournisseur', sa.String(length=100), nullable=True),
    sa.Column('emplacement', sa.String(length=100), nullable=True),
    sa.Column('rangee', sa.String(length=50), nullable=True),
    sa.Column('etagere', sa.String(length=50), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('date_creation', sa.DateTime(), nullable=False),
    sa.Column('date_modification', sa.DateTime(), nullable=True),
    sa.Column('derniere_entree', sa.DateTime(), nullable=True),
    sa.Column('derniere_sortie', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_piece_reference', 'pieces_detachees', ['reference'], unique=False)
    op.create_index('idx_piece_stock', 'pieces_detachees', ['stock_actuel', 'stock_minimum'], unique=False)
    op.create_index(op.f('ix_pieces_detachees_date_creation'), 'pieces_detachees', ['date_creation'], unique=False)
    op.create_index(op.f('ix_pieces_detachees_id'), 'pieces_detachees', ['id'], unique=False)
    op.create_index(op.f('ix_pieces_detachees_is_active'), 'pieces_detachees', ['is_active'], unique=False)
    op.create_index(op.f('ix_pieces_detachees_nom'), 'pieces_detachees', ['nom'], unique=False)
    op.create_index(op.f('ix_pieces_detachees_reference'), 'pieces_detachees', ['reference'], unique=True)
    op.create_index(op.f('ix_pieces_detachees_stock_actuel'), 'pieces_detachees', ['stock_actuel'], unique=False)
    op.create_table('report_templates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('report_type', sa.String(length=50), nullable=False),
    sa.Column('template_content', sa.Text(), nullable=False),
    sa.Column('css_styles', sa.Text(), nullable=True),
    sa.Column('default_filters', sa.JSON(), nullable=True),
    sa.Column('default_parameters', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_system', sa.Boolean(), nullable=False),
    sa.Column('version', sa.String(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_report_templates_id'), 'report_templates', ['id'], unique=False)
    op.create_index(op.f('ix_report_templates_name'), 'report_templates', ['name'], unique=False)
    op.create_index(op.f('ix_report_templates_report_type'), 'report_templates', ['report_type'], unique=False)
    op.create_table('factures',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('numero_facture', sa.String(length=50), nullable=False),
    sa.Column('date_emission', sa.Date(), nullable=False),
    sa.Column('date_echeance', sa.Date(), nullable=False),
    sa.Column('montant_ht', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('taux_tva', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('montant_ttc', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('statut_paiement', postgresql.ENUM('en_attente', 'payee', 'en_retard', name='statutpaiement', create_type=False), nullable=False),
    sa.Column('date_paiement', sa.Date(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('periode_debut', sa.Date(), nullable=True),
    sa.Column('periode_fin', sa.Date(), nullable=True),
    sa.Column('date_creation', sa.DateTime(), nullable=False),
    sa.Column('contrat_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['contrat_id'], ['contrats.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_facture_contrat_echeance', 'factures', ['contrat_id', 'date_echeance'], unique=False)
    op.create_index('idx_facture_statut', 'factures', ['statut_paiement'], unique=False)
    op.create_index(op.f('ix_factures_contrat_id'), 'factures', ['contrat_id'], unique=False)
    op.create_index(op.f('ix_factures_date_creation'), 'factures', ['date_creation'], unique=False)
    op.create_index(op.f('ix_factures_date_echeance'), 'factures', ['date_echeance'], unique=False)
    op.create_index(op.f('ix_factures_date_emission'), 'factures', ['date_emission'], unique=False)
    op.create_index(op.f('ix_factures_id'), 'factures', ['id'], unique=False)
    op.create_index(op.f('ix_factures_numero_facture'), 'factures', ['numero_facture'], unique=True)
    op.create_index(op.f('ix_factures_statut_paiement'), 'factures', ['statut_paiement'], unique=False)
    op.create_table('interventions_pieces',
    sa.Column('intervention_id', sa.Integer(), nullable=False),
    sa.Column('piece_detachee_id', sa.Integer(), nullable=False),
    sa.Column('quantite_utilisee', sa.Integer(), nullable=False),
    sa.Column('date_utilisation', sa.DateTime(), nullable=False),
    sa.Column('commentaire', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['intervention_id'], ['interventions.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['piece_detachee_id'], ['pieces_detachees.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('intervention_id', 'piece_detachee_id')
    )
    op.create_index('idx_intervention_piece', 'interventions_pieces', ['intervention_id', 'piece_detachee_id'], unique=False)
    op.create_index(op.f('ix_interventions_pieces_date_utilisation'), 'interventions_pieces', ['date_utilisation'], unique=False)
    op.create_index(op.f('ix_interventions_pieces_intervention_id'), 'interventions_pieces', ['intervention_id'], unique=False)
    op.create_index(op.f('ix_interventions_pieces_piece_detachee_id'), 'interventions_pieces', ['piece_detachee_id'], unique=False)
    op.create_table('mouvements_stock',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type_mouvement', postgresql.ENUM('entree', 'sortie', 'ajustement', 'retour', name='typemouvement', create_type=False), nullable=False),
    sa.Column('quantite', sa.Integer(), nullable=False),
    sa.Column('stock_avant', sa.Integer(), nullable=False),
    sa.Column('stock_apres', sa.Integer(), nullable=False),
    sa.Column('motif', sa.String(length=255), nullable=True),
    sa.Column('commentaire', sa.Text(), nullable=True),
    sa.Column('date_mouvement', sa.DateTime(), nullable=False),
    sa.Column('piece_detachee_id', sa.Integer(), nullable=False),
    sa.Column('intervention_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['intervention_id'], ['interventions.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['piece_detachee_id'], ['pieces_detachees.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_mouvement_piece_date', 'mouvements_stock', ['piece_detachee_id', 'date_mouvement'], unique=False)
    op.create_index('idx_mouvement_type', 'mouvements_stock', ['type_mouvement'], unique=False)
    op.create_index(op.f('ix_mouvements_stock_date_mouvement'), 'mouvements_stock', ['date_mouvement'], unique=False)
    op.create_index(op.f('ix_mouvements_stock_id'), 'mouvements_stock', ['id'], unique=False)
    op.create_index(op.f('ix_mouvements_stock_intervention_id'), 'mouvements_stock', ['intervention_id'], unique=False)
    op.create_index(op.f('ix_mouvements_stock_piece_detachee_id'), 'mouvements_stock', ['piece_detachee_id'], unique=False)
    op.create_index(op.f('ix_mouvements_stock_type_mouvement'), 'mouvements_stock', ['type_mouvement'], unique=False)
    op.create_index(op.f('ix_mouvements_stock_user_id'), 'mouvements_stock', ['user_id'], unique=False)
    op.add_column('clients', sa.Column('nom_commercial', sa.String(length=255), nullable=True))
    op.add_column('clients', sa.Column('type_client', postgresql.ENUM('entreprise', 'collectivite', 'association', 'particulier', name='typeclient', create_type=False), nullable=False))
    op.add_column('clients', sa.Column('secteur_activite', sa.String(length=100), nullable=True))
    op.add_column('clients', sa.Column('taille_entreprise', sa.String(length=50), nullable=True))
    op.add_column('clients', sa.Column('numero_siret', sa.String(length=14), nullable=True))
    op.add_column('clients', sa.Column('numero_tva', sa.String(length=20), nullable=True))
    op.add_column('clients', sa.Column('code_ape', sa.String(length=10), nullable=True))
    op.add_column('clients', sa.Column('nom_contact', sa.String(length=255), nullable=False))
    op.add_column('clients', sa.Column('prenom_contact', sa.String(length=255), nullable=True))
    op.add_column('clients', sa.Column('fonction_contact', sa.String(length=100), nullable=True))
    op.add_column('clients', sa.Column('telephone', sa.String(length=20), nullable=True))
    op.add_column('clients', sa.Column('telephone_mobile', sa.String(length=20), nullable=True))
    op.add_column('clients', sa.Column('fax', sa.String(length=20), nullable=True))
    op.add_column('clients', sa.Column('adresse_ligne1', sa.String(length=255), nullable=True))
    op.add_column('clients', sa.Column('adresse_ligne2', sa.String(length=255), nullable=True))
    op.add_column('clients', sa.Column('code_postal', sa.String(length=10), nullable=True))
    op.add_column('clients', sa.Column('ville', sa.String(length=100), nullable=True))
    op.add_column('clients', sa.Column('region', sa.String(length=100), nullable=True))
    op.add_column('clients', sa.Column('pays', sa.String(length=100), nullable=False))
    op.add_column('clients', sa.Column('niveau_service', postgresql.ENUM('premium', 'standard', 'basique', name='niveauservice', create_type=False), nullable=False))
    op.add_column('clients', sa.Column('chiffre_affaires_annuel', sa.Numeric(precision=12, scale=2), nullable=True))
    op.add_column('clients', sa.Column('nb_employes', sa.Integer(), nullable=True))
    op.add_column('clients', sa.Column('date_premier_contrat', sa.DateTime(), nullable=True))
    op.add_column('clients', sa.Column('date_derniere_intervention', sa.DateTime(), nullable=True))
    op.add_column('clients', sa.Column('notes_commerciales', sa.Text(), nullable=True))
    op.add_column('clients', sa.Column('instructions_particulieres', sa.Text(), nullable=True))
    op.alter_column('clients', 'date_modification',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.drop_constraint(op.f('clients_email_key'), 'clients', type_='unique')
    op.drop_constraint(op.f('clients_user_id_key'), 'clients', type_='unique')
    op.create_index('idx_client_actif_creation', 'clients', ['is_active', 'date_creation'], unique=False)
    op.create_index('idx_client_nom_email', 'clients', ['nom_entreprise', 'email'], unique=False)
    op.create_index('idx_client_secteur_ville', 'clients', ['secteur_activite', 'ville'], unique=False)
    op.create_index('idx_client_type_niveau', 'clients', ['type_client', 'niveau_service'], unique=False)
    op.create_index(op.f('ix_clients_code_postal'), 'clients', ['code_postal'], unique=False)
    op.create_index(op.f('ix_clients_date_creation'), 'clients', ['date_creation'], unique=False)
    op.create_index(op.f('ix_clients_is_active'), 'clients', ['is_active'], unique=False)
    op.create_index(op.f('ix_clients_niveau_service'), 'clients', ['niveau_service'], unique=False)
    op.create_index(op.f('ix_clients_nom_entreprise'), 'clients', ['nom_entreprise'], unique=False)
    op.create_index(op.f('ix_clients_numero_siret'), 'clients', ['numero_siret'], unique=True)
    op.create_index(op.f('ix_clients_secteur_activite'), 'clients', ['secteur_activite'], unique=False)
    op.create_index(op.f('ix_clients_type_client'), 'clients', ['type_client'], unique=False)
    op.create_index(op.f('ix_clients_user_id'), 'clients', ['user_id'], unique=True)
    op.create_index(op.f('ix_clients_ville'), 'clients', ['ville'], unique=False)
    # Ensure existing rows don't violate the NOT NULL constraint before applying it.
    # Assumption: a sensible default domain 'general' is acceptable for legacy rows with NULL.
    op.execute("""
    UPDATE competences
    SET domaine = 'general'
    WHERE domaine IS NULL;
    """)
    op.alter_column('competences', 'domaine',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
    # Safely convert text default and column values to the new ENUM type by:
    # 1) dropping the textual default,
    # 2) altering the column type using a cast,
    # 3) setting the new enum default.
    op.execute("ALTER TABLE competences ALTER COLUMN niveau_requis_minimum DROP DEFAULT;")
    op.execute("ALTER TABLE competences ALTER COLUMN niveau_requis_minimum TYPE niveaucompetence USING niveau_requis_minimum::niveaucompetence;")
    op.execute("ALTER TABLE competences ALTER COLUMN niveau_requis_minimum SET DEFAULT 'intermediaire'::niveaucompetence;")
    op.drop_constraint(op.f('competences_nom_key'), 'competences', type_='unique')
    op.create_index('idx_competence_actif_domaine', 'competences', ['is_active', 'domaine'], unique=False)
    op.create_index('idx_competence_nom_domaine', 'competences', ['nom', 'domaine'], unique=False)
    op.create_index(op.f('ix_competences_domaine'), 'competences', ['domaine'], unique=False)
    op.create_index(op.f('ix_competences_nom'), 'competences', ['nom'], unique=True)
    op.add_column('contrats', sa.Column('description', sa.Text(), nullable=True))
    op.add_column('contrats', sa.Column('type_contrat', postgresql.ENUM('maintenance_preventive', 'maintenance_corrective', 'maintenance_complete', 'support_technique', 'contrat_cadre', name='typecontrat', create_type=False), nullable=False))
    op.add_column('contrats', sa.Column('statut', postgresql.ENUM('brouillon', 'en_cours', 'expire', 'resilie', 'suspendu', name='statutcontrat', create_type=False), nullable=False))
    op.add_column('contrats', sa.Column('date_signature', sa.Date(), nullable=True))
    op.add_column('contrats', sa.Column('date_renouvellement', sa.Date(), nullable=True))
    op.add_column('contrats', sa.Column('montant_annuel', sa.Numeric(precision=12, scale=2), nullable=True))
    op.add_column('contrats', sa.Column('montant_mensuel', sa.Numeric(precision=10, scale=2), nullable=True))
    op.add_column('contrats', sa.Column('devise', sa.String(length=3), nullable=True))
    op.add_column('contrats', sa.Column('mode_facturation', postgresql.ENUM('mensuel', 'trimestriel', 'annuel', name='modefacturation', create_type=False), nullable=False))
    op.add_column('contrats', sa.Column('temps_reponse_urgence', sa.Integer(), nullable=True))
    op.add_column('contrats', sa.Column('temps_reponse_normal', sa.Integer(), nullable=True))
    op.add_column('contrats', sa.Column('taux_disponibilite', sa.Numeric(precision=5, scale=2), nullable=True))
    op.add_column('contrats', sa.Column('penalites_retard', sa.Numeric(precision=10, scale=2), nullable=True))
    op.add_column('contrats', sa.Column('nb_interventions_incluses', sa.Integer(), nullable=True))
    op.add_column('contrats', sa.Column('nb_interventions_utilisees', sa.Integer(), nullable=True))
    op.add_column('contrats', sa.Column('heures_maintenance_incluses', sa.Integer(), nullable=True))
    op.add_column('contrats', sa.Column('heures_maintenance_utilisees', sa.Integer(), nullable=True))
    op.add_column('contrats', sa.Column('equipements_couverts', sa.Text(), nullable=True))
    op.add_column('contrats', sa.Column('contact_client', sa.String(length=255), nullable=True))
    op.add_column('contrats', sa.Column('contact_responsable', sa.String(length=255), nullable=True))
    op.drop_constraint(op.f('contrats_numero_contrat_key'), 'contrats', type_='unique')
    op.drop_index(op.f('ix_contrats_client'), table_name='contrats')
    op.create_index('idx_contrat_client_dates', 'contrats', ['client_id', 'date_debut', 'date_fin'], unique=False)
    op.create_index('idx_contrat_statut', 'contrats', ['statut'], unique=False)
    op.create_index(op.f('ix_contrats_client_id'), 'contrats', ['client_id'], unique=False)
    op.create_index(op.f('ix_contrats_date_creation'), 'contrats', ['date_creation'], unique=False)
    op.create_index(op.f('ix_contrats_date_debut'), 'contrats', ['date_debut'], unique=False)
    op.create_index(op.f('ix_contrats_date_fin'), 'contrats', ['date_fin'], unique=False)
    op.create_index(op.f('ix_contrats_is_active'), 'contrats', ['is_active'], unique=False)
    op.create_index(op.f('ix_contrats_mode_facturation'), 'contrats', ['mode_facturation'], unique=False)
    op.create_index(op.f('ix_contrats_numero_contrat'), 'contrats', ['numero_contrat'], unique=True)
    op.create_index(op.f('ix_contrats_statut'), 'contrats', ['statut'], unique=False)
    op.create_index(op.f('ix_contrats_type_contrat'), 'contrats', ['type_contrat'], unique=False)
    op.alter_column('documents', 'date_upload',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.create_index('idx_document_intervention_upload', 'documents', ['intervention_id', 'date_upload'], unique=False)
    op.create_index(op.f('ix_documents_date_upload'), 'documents', ['date_upload'], unique=False)
    op.create_index(op.f('ix_documents_intervention_id'), 'documents', ['intervention_id'], unique=False)
    op.create_index(op.f('ix_documents_nom_fichier'), 'documents', ['nom_fichier'], unique=False)
    op.alter_column('equipements', 'type_equipement',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
    op.drop_constraint(op.f('equipements_nom_key'), 'equipements', type_='unique')
    op.create_index('idx_equipement_client_statut', 'equipements', ['client_id', 'statut'], unique=False)
    op.create_index('idx_equipement_created_type', 'equipements', ['created_at', 'type_equipement'], unique=False)
    op.create_index('idx_equipement_statut_criticite', 'equipements', ['statut', 'criticite'], unique=False)
    op.create_index('idx_equipement_type_localisation', 'equipements', ['type_equipement', 'localisation'], unique=False)
    op.create_index(op.f('ix_equipements_client_id'), 'equipements', ['client_id'], unique=False)
    op.create_index(op.f('ix_equipements_code_interne'), 'equipements', ['code_interne'], unique=True)
    op.create_index(op.f('ix_equipements_contrat_id'), 'equipements', ['contrat_id'], unique=False)
    op.create_index(op.f('ix_equipements_created_at'), 'equipements', ['created_at'], unique=False)
    op.create_index(op.f('ix_equipements_criticite'), 'equipements', ['criticite'], unique=False)
    op.create_index(op.f('ix_equipements_localisation'), 'equipements', ['localisation'], unique=False)
    op.create_index(op.f('ix_equipements_nom'), 'equipements', ['nom'], unique=False)
    op.create_index(op.f('ix_equipements_numero_serie'), 'equipements', ['numero_serie'], unique=True)
    op.create_index(op.f('ix_equipements_statut'), 'equipements', ['statut'], unique=False)
    op.create_index(op.f('ix_equipements_type_equipement'), 'equipements', ['type_equipement'], unique=False)
    op.create_foreign_key(None, 'equipements', 'contrats', ['contrat_id'], ['id'], ondelete='SET NULL')
    op.create_foreign_key(None, 'equipements', 'clients', ['client_id'], ['id'], ondelete='SET NULL')
    op.drop_column('equipements', 'frequence_entretien')
    op.alter_column('historiques_interventions', 'horodatage',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.create_index('idx_historique_intervention', 'historiques_interventions', ['intervention_id', 'user_id', 'horodatage'], unique=False)
    op.create_index(op.f('ix_historiques_interventions_horodatage'), 'historiques_interventions', ['horodatage'], unique=False)
    op.create_index(op.f('ix_historiques_interventions_intervention_id'), 'historiques_interventions', ['intervention_id'], unique=False)
    op.create_index(op.f('ix_historiques_interventions_statut'), 'historiques_interventions', ['statut'], unique=False)
    op.create_index(op.f('ix_historiques_interventions_user_id'), 'historiques_interventions', ['user_id'], unique=False)
    op.alter_column('interventions', 'priorite',
               existing_type=postgresql.ENUM('urgente', 'haute', 'normale', 'basse', 'programmee', name='prioriteintervention'),
               nullable=False)
    op.alter_column('interventions', 'equipement_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.create_index('idx_intervention_client_statut', 'interventions', ['client_id', 'statut'], unique=False)
    op.create_index('idx_intervention_dates', 'interventions', ['date_creation', 'date_limite'], unique=False)
    op.create_index('idx_intervention_equipement_type', 'interventions', ['equipement_id', 'type'], unique=False)
    op.create_index('idx_intervention_statut_priorite', 'interventions', ['statut', 'priorite'], unique=False)
    op.create_index('idx_intervention_technicien_statut', 'interventions', ['technicien_id', 'statut'], unique=False)
    op.create_index('idx_intervention_type_urgence', 'interventions', ['type', 'urgence'], unique=False)
    op.create_index(op.f('ix_interventions_client_id'), 'interventions', ['client_id'], unique=False)
    op.create_index(op.f('ix_interventions_contrat_id'), 'interventions', ['contrat_id'], unique=False)
    op.create_index(op.f('ix_interventions_date_limite'), 'interventions', ['date_limite'], unique=False)
    op.create_index(op.f('ix_interventions_equipement_id'), 'interventions', ['equipement_id'], unique=False)
    op.create_index(op.f('ix_interventions_priorite'), 'interventions', ['priorite'], unique=False)
    op.create_index(op.f('ix_interventions_technicien_id'), 'interventions', ['technicien_id'], unique=False)
    op.create_index(op.f('ix_interventions_urgence'), 'interventions', ['urgence'], unique=False)
    op.create_foreign_key(None, 'interventions', 'users', ['created_by_id'], ['id'], ondelete='SET NULL')
    op.alter_column('notifications', 'date_envoi',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.create_index('idx_notification_date', 'notifications', ['date_envoi'], unique=False)
    op.create_index('idx_notification_user_intervention', 'notifications', ['user_id', 'intervention_id'], unique=False)
    op.create_index(op.f('ix_notifications_canal'), 'notifications', ['canal'], unique=False)
    op.create_index(op.f('ix_notifications_date_envoi'), 'notifications', ['date_envoi'], unique=False)
    op.create_index(op.f('ix_notifications_intervention_id'), 'notifications', ['intervention_id'], unique=False)
    op.create_index(op.f('ix_notifications_type'), 'notifications', ['type'], unique=False)
    op.create_index(op.f('ix_notifications_user_id'), 'notifications', ['user_id'], unique=False)
    # Convert frequence textual values to frequenceplanning ENUM safely.
    op.execute("ALTER TABLE plannings ALTER COLUMN frequence DROP DEFAULT;")
    op.execute("ALTER TABLE plannings ALTER COLUMN frequence TYPE frequenceplanning USING frequence::frequenceplanning;")
    op.execute("ALTER TABLE plannings ALTER COLUMN frequence SET DEFAULT 'mensuel'::frequenceplanning;")
    op.alter_column('plannings', 'statut',
               existing_type=postgresql.ENUM('actif', 'suspendu', 'termine', 'en_retard', name='statutplanning'),
               nullable=False,
               existing_server_default=sa.text("'actif'::statutplanning"))
    op.alter_column('plannings', 'date_creation',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.create_index('idx_planning_equipement_frequence', 'plannings', ['equipement_id', 'frequence'], unique=False)
    op.create_index('idx_planning_statut_prochaine', 'plannings', ['statut', 'prochaine_date'], unique=False)
    op.create_index(op.f('ix_plannings_date_creation'), 'plannings', ['date_creation'], unique=False)
    op.create_index(op.f('ix_plannings_equipement_id'), 'plannings', ['equipement_id'], unique=False)
    op.create_index(op.f('ix_plannings_frequence'), 'plannings', ['frequence'], unique=False)
    op.create_index(op.f('ix_plannings_is_active'), 'plannings', ['is_active'], unique=False)
    op.create_index(op.f('ix_plannings_prochaine_date'), 'plannings', ['prochaine_date'], unique=False)
    op.create_index(op.f('ix_plannings_statut'), 'plannings', ['statut'], unique=False)
    op.add_column('report_schedules', sa.Column('filters_json', sa.JSON(), nullable=True))
    op.add_column('report_schedules', sa.Column('parameters_json', sa.JSON(), nullable=True))
    op.add_column('report_schedules', sa.Column('error_count', sa.Integer(), nullable=False))
    op.add_column('report_schedules', sa.Column('created_at', sa.DateTime(), nullable=False))
    op.add_column('report_schedules', sa.Column('updated_at', sa.DateTime(), nullable=False))
    op.add_column('report_schedules', sa.Column('template_id', sa.Integer(), nullable=True))
    op.alter_column('report_schedules', 'timezone',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
    op.alter_column('report_schedules', 'email_enabled',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('report_schedules', 'email_recipients',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               nullable=False)
    op.alter_column('report_schedules', 'run_count',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('report_schedules', 'success_count',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('report_schedules', 'created_by_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.create_index(op.f('ix_report_schedules_is_active'), 'report_schedules', ['is_active'], unique=False)
    op.create_index(op.f('ix_report_schedules_last_run_at'), 'report_schedules', ['last_run_at'], unique=False)
    op.create_index(op.f('ix_report_schedules_name'), 'report_schedules', ['name'], unique=False)
    op.create_index(op.f('ix_report_schedules_report_type'), 'report_schedules', ['report_type'], unique=False)
    op.drop_constraint(op.f('report_schedules_created_by_id_fkey'), 'report_schedules', type_='foreignkey')
    op.create_foreign_key(None, 'report_schedules', 'users', ['created_by_id'], ['id'])
    op.create_foreign_key(None, 'report_schedules', 'report_templates', ['template_id'], ['id'])
    op.drop_column('report_schedules', 'date_creation')
    op.drop_column('report_schedules', 'default_parameters')
    op.drop_column('report_schedules', 'date_modification')
    op.drop_column('report_schedules', 'last_success_at')
    op.drop_column('report_schedules', 'max_reports_to_keep')
    op.drop_column('report_schedules', 'default_filters')
    op.drop_column('report_schedules', 'keep_reports_days')
    op.add_column('reports', sa.Column('max_downloads', sa.Integer(), nullable=True))
    op.add_column('reports', sa.Column('generation_duration', sa.Integer(), nullable=True))
    op.add_column('reports', sa.Column('template_id', sa.Integer(), nullable=True))
    # Safely convert textual report columns to ENUM types
    op.execute("ALTER TABLE reports ALTER COLUMN report_type DROP DEFAULT;")
    op.execute("ALTER TABLE reports ALTER COLUMN report_type TYPE reporttype USING report_type::reporttype;")
    op.execute("ALTER TABLE reports ALTER COLUMN report_type SET DEFAULT 'interventions'::reporttype;")
    op.execute("ALTER TABLE reports ALTER COLUMN report_format DROP DEFAULT;")
    op.execute("ALTER TABLE reports ALTER COLUMN report_format TYPE reportformat USING report_format::reportformat;")
    op.execute("ALTER TABLE reports ALTER COLUMN report_format SET DEFAULT 'pdf'::reportformat;")
    op.execute("ALTER TABLE reports ALTER COLUMN status DROP DEFAULT;")
    op.execute("ALTER TABLE reports ALTER COLUMN status TYPE reportstatus USING status::reportstatus;")
    op.execute("ALTER TABLE reports ALTER COLUMN status SET DEFAULT 'pending'::reportstatus;")
    op.alter_column('reports', 'access_token',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=255),
               existing_nullable=True)
    op.alter_column('reports', 'created_by_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_constraint(op.f('reports_access_token_key'), 'reports', type_='unique')
    op.create_index(op.f('ix_reports_access_token'), 'reports', ['access_token'], unique=True)
    op.create_index(op.f('ix_reports_created_by_id'), 'reports', ['created_by_id'], unique=False)
    op.drop_constraint(op.f('reports_created_by_id_fkey'), 'reports', type_='foreignkey')
    op.create_foreign_key(None, 'reports', 'report_templates', ['template_id'], ['id'])
    op.create_foreign_key(None, 'reports', 'users', ['created_by_id'], ['id'])
    op.drop_column('reports', 'generation_log')
    op.add_column('technicien_competence', sa.Column('niveau', postgresql.ENUM('debutant', 'intermediaire', 'avance', 'expert', name='niveaucompetence', create_type=False), nullable=False))
    op.add_column('technicien_competence', sa.Column('date_acquisition', sa.DateTime(), nullable=False))
    op.add_column('technicien_competence', sa.Column('date_validation', sa.DateTime(), nullable=True))
    op.add_column('technicien_competence', sa.Column('validee_par', sa.String(length=255), nullable=True))
    op.alter_column('technicien_competence', 'technicien_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('technicien_competence', 'competence_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.create_index('idx_technicien_competence_niveau', 'technicien_competence', ['technicien_id', 'niveau'], unique=False)
    op.execute("ALTER TABLE techniciens ALTER COLUMN niveau_technicien DROP DEFAULT;")
    op.execute("ALTER TABLE techniciens ALTER COLUMN niveau_technicien TYPE niveaucompetence USING niveau_technicien::niveaucompetence;")
    op.execute("ALTER TABLE techniciens ALTER COLUMN niveau_technicien SET DEFAULT 'intermediaire'::niveaucompetence;")
    op.execute("ALTER TABLE techniciens ALTER COLUMN disponibilite DROP DEFAULT;")
    op.execute("ALTER TABLE techniciens ALTER COLUMN disponibilite TYPE disponibilitetechnicien USING disponibilite::disponibilitetechnicien;")
    op.execute("ALTER TABLE techniciens ALTER COLUMN disponibilite SET DEFAULT 'disponible'::disponibilitetechnicien;")
    op.create_index('idx_technicien_actif_equipe', 'techniciens', ['is_active', 'equipe'], unique=False)
    op.create_index('idx_technicien_equipe_dispo', 'techniciens', ['equipe', 'disponibilite'], unique=False)
    op.create_index('idx_technicien_zone_niveau', 'techniciens', ['zone_intervention', 'niveau_technicien'], unique=False)
    op.create_index(op.f('ix_techniciens_disponibilite'), 'techniciens', ['disponibilite'], unique=False)
    op.create_index(op.f('ix_techniciens_equipe'), 'techniciens', ['equipe'], unique=False)
    op.create_index(op.f('ix_techniciens_is_active'), 'techniciens', ['is_active'], unique=False)
    op.create_index(op.f('ix_techniciens_niveau_technicien'), 'techniciens', ['niveau_technicien'], unique=False)
    op.create_index(op.f('ix_techniciens_numero_badge'), 'techniciens', ['numero_badge'], unique=True)
    op.create_index(op.f('ix_techniciens_user_id'), 'techniciens', ['user_id'], unique=True)
    op.create_index(op.f('ix_techniciens_zone_intervention'), 'techniciens', ['zone_intervention'], unique=False)
    op.alter_column('users', 'full_name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('users', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.create_index('idx_user_created_role', 'users', ['created_at', 'role'], unique=False)
    op.create_index('idx_user_email_active', 'users', ['email', 'is_active'], unique=False)
    op.create_index('idx_user_role_active', 'users', ['role', 'is_active'], unique=False)
    op.create_index('idx_user_username_role', 'users', ['username', 'role'], unique=False)
    op.create_index(op.f('ix_users_created_at'), 'users', ['created_at'], unique=False)
    op.create_index(op.f('ix_users_is_active'), 'users', ['is_active'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_is_active'), table_name='users')
    op.drop_index(op.f('ix_users_created_at'), table_name='users')
    op.drop_index('idx_user_username_role', table_name='users')
    op.drop_index('idx_user_role_active', table_name='users')
    op.drop_index('idx_user_email_active', table_name='users')
    op.drop_index('idx_user_created_role', table_name='users')
    op.alter_column('users', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('users', 'full_name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_index(op.f('ix_techniciens_zone_intervention'), table_name='techniciens')
    op.drop_index(op.f('ix_techniciens_user_id'), table_name='techniciens')
    op.drop_index(op.f('ix_techniciens_numero_badge'), table_name='techniciens')
    op.drop_index(op.f('ix_techniciens_niveau_technicien'), table_name='techniciens')
    op.drop_index(op.f('ix_techniciens_is_active'), table_name='techniciens')
    op.drop_index(op.f('ix_techniciens_equipe'), table_name='techniciens')
    op.drop_index(op.f('ix_techniciens_disponibilite'), table_name='techniciens')
    op.drop_index('idx_technicien_zone_niveau', table_name='techniciens')
    op.drop_index('idx_technicien_equipe_dispo', table_name='techniciens')
    op.drop_index('idx_technicien_actif_equipe', table_name='techniciens')
    op.alter_column('techniciens', 'disponibilite',
               existing_type=postgresql.ENUM('disponible', 'occupe', 'conge', 'formation', 'indisponible', name='disponibilitetechnicien'),
               type_=sa.VARCHAR(),
               nullable=True)
    op.alter_column('techniciens', 'niveau_technicien',
               existing_type=postgresql.ENUM('debutant', 'intermediaire', 'avance', 'expert', name='niveaucompetence'),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False,
               existing_server_default=sa.text("'intermediaire'::character varying"))
    op.drop_index('idx_technicien_competence_niveau', table_name='technicien_competence')
    op.alter_column('technicien_competence', 'competence_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('technicien_competence', 'technicien_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_column('technicien_competence', 'validee_par')
    op.drop_column('technicien_competence', 'date_validation')
    op.drop_column('technicien_competence', 'date_acquisition')
    op.drop_column('technicien_competence', 'niveau')
    op.add_column('reports', sa.Column('generation_log', sa.TEXT(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'reports', type_='foreignkey')
    op.drop_constraint(None, 'reports', type_='foreignkey')
    op.create_foreign_key(op.f('reports_created_by_id_fkey'), 'reports', 'users', ['created_by_id'], ['id'], ondelete='SET NULL')
    op.drop_index(op.f('ix_reports_created_by_id'), table_name='reports')
    op.drop_index(op.f('ix_reports_access_token'), table_name='reports')
    op.create_unique_constraint(op.f('reports_access_token_key'), 'reports', ['access_token'], postgresql_nulls_not_distinct=False)
    op.alter_column('reports', 'created_by_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('reports', 'access_token',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=100),
               existing_nullable=True)
    op.alter_column('reports', 'status',
               existing_type=postgresql.ENUM('pending', 'generating', 'completed', 'failed', 'expired', name='reportstatus'),
               type_=sa.VARCHAR(length=20),
               existing_nullable=False)
    op.alter_column('reports', 'report_format',
               existing_type=postgresql.ENUM('pdf', 'excel', 'csv', 'json', name='reportformat'),
               type_=sa.VARCHAR(length=10),
               existing_nullable=False)
    op.alter_column('reports', 'report_type',
               existing_type=postgresql.ENUM('interventions', 'equipements', 'techniciens', 'clients', 'dashboard', 'planning', 'stock', 'financial', name='reporttype'),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)
    op.drop_column('reports', 'template_id')
    op.drop_column('reports', 'generation_duration')
    op.drop_column('reports', 'max_downloads')
    op.add_column('report_schedules', sa.Column('keep_reports_days', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('report_schedules', sa.Column('default_filters', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('report_schedules', sa.Column('max_reports_to_keep', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('report_schedules', sa.Column('last_success_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('report_schedules', sa.Column('date_modification', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('report_schedules', sa.Column('default_parameters', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('report_schedules', sa.Column('date_creation', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'report_schedules', type_='foreignkey')
    op.drop_constraint(None, 'report_schedules', type_='foreignkey')
    op.create_foreign_key(op.f('report_schedules_created_by_id_fkey'), 'report_schedules', 'users', ['created_by_id'], ['id'], ondelete='SET NULL')
    op.drop_index(op.f('ix_report_schedules_report_type'), table_name='report_schedules')
    op.drop_index(op.f('ix_report_schedules_name'), table_name='report_schedules')
    op.drop_index(op.f('ix_report_schedules_last_run_at'), table_name='report_schedules')
    op.drop_index(op.f('ix_report_schedules_is_active'), table_name='report_schedules')
    op.alter_column('report_schedules', 'created_by_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('report_schedules', 'success_count',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('report_schedules', 'run_count',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('report_schedules', 'email_recipients',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               nullable=True)
    op.alter_column('report_schedules', 'email_enabled',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('report_schedules', 'timezone',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
    op.drop_column('report_schedules', 'template_id')
    op.drop_column('report_schedules', 'updated_at')
    op.drop_column('report_schedules', 'created_at')
    op.drop_column('report_schedules', 'error_count')
    op.drop_column('report_schedules', 'parameters_json')
    op.drop_column('report_schedules', 'filters_json')
    op.drop_index(op.f('ix_plannings_statut'), table_name='plannings')
    op.drop_index(op.f('ix_plannings_prochaine_date'), table_name='plannings')
    op.drop_index(op.f('ix_plannings_is_active'), table_name='plannings')
    op.drop_index(op.f('ix_plannings_frequence'), table_name='plannings')
    op.drop_index(op.f('ix_plannings_equipement_id'), table_name='plannings')
    op.drop_index(op.f('ix_plannings_date_creation'), table_name='plannings')
    op.drop_index('idx_planning_statut_prochaine', table_name='plannings')
    op.drop_index('idx_planning_equipement_frequence', table_name='plannings')
    op.alter_column('plannings', 'date_creation',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('plannings', 'statut',
               existing_type=postgresql.ENUM('actif', 'suspendu', 'termine', 'en_retard', name='statutplanning'),
               nullable=True,
               existing_server_default=sa.text("'actif'::statutplanning"))
    op.alter_column('plannings', 'frequence',
               existing_type=postgresql.ENUM('journalier', 'hebdomadaire', 'mensuel', 'trimestriel', 'semestriel', 'annuel', name='frequenceplanning'),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.drop_index(op.f('ix_notifications_user_id'), table_name='notifications')
    op.drop_index(op.f('ix_notifications_type'), table_name='notifications')
    op.drop_index(op.f('ix_notifications_intervention_id'), table_name='notifications')
    op.drop_index(op.f('ix_notifications_date_envoi'), table_name='notifications')
    op.drop_index(op.f('ix_notifications_canal'), table_name='notifications')
    op.drop_index('idx_notification_user_intervention', table_name='notifications')
    op.drop_index('idx_notification_date', table_name='notifications')
    op.alter_column('notifications', 'date_envoi',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.drop_constraint(None, 'interventions', type_='foreignkey')
    op.drop_index(op.f('ix_interventions_urgence'), table_name='interventions')
    op.drop_index(op.f('ix_interventions_technicien_id'), table_name='interventions')
    op.drop_index(op.f('ix_interventions_priorite'), table_name='interventions')
    op.drop_index(op.f('ix_interventions_equipement_id'), table_name='interventions')
    op.drop_index(op.f('ix_interventions_date_limite'), table_name='interventions')
    op.drop_index(op.f('ix_interventions_contrat_id'), table_name='interventions')
    op.drop_index(op.f('ix_interventions_client_id'), table_name='interventions')
    op.drop_index('idx_intervention_type_urgence', table_name='interventions')
    op.drop_index('idx_intervention_technicien_statut', table_name='interventions')
    op.drop_index('idx_intervention_statut_priorite', table_name='interventions')
    op.drop_index('idx_intervention_equipement_type', table_name='interventions')
    op.drop_index('idx_intervention_dates', table_name='interventions')
    op.drop_index('idx_intervention_client_statut', table_name='interventions')
    op.alter_column('interventions', 'equipement_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('interventions', 'priorite',
               existing_type=postgresql.ENUM('urgente', 'haute', 'normale', 'basse', 'programmee', name='prioriteintervention'),
               nullable=True)
    op.drop_index(op.f('ix_historiques_interventions_user_id'), table_name='historiques_interventions')
    op.drop_index(op.f('ix_historiques_interventions_statut'), table_name='historiques_interventions')
    op.drop_index(op.f('ix_historiques_interventions_intervention_id'), table_name='historiques_interventions')
    op.drop_index(op.f('ix_historiques_interventions_horodatage'), table_name='historiques_interventions')
    op.drop_index('idx_historique_intervention', table_name='historiques_interventions')
    op.alter_column('historiques_interventions', 'horodatage',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.add_column('equipements', sa.Column('frequence_entretien', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'equipements', type_='foreignkey')
    op.drop_constraint(None, 'equipements', type_='foreignkey')
    op.drop_index(op.f('ix_equipements_type_equipement'), table_name='equipements')
    op.drop_index(op.f('ix_equipements_statut'), table_name='equipements')
    op.drop_index(op.f('ix_equipements_numero_serie'), table_name='equipements')
    op.drop_index(op.f('ix_equipements_nom'), table_name='equipements')
    op.drop_index(op.f('ix_equipements_localisation'), table_name='equipements')
    op.drop_index(op.f('ix_equipements_criticite'), table_name='equipements')
    op.drop_index(op.f('ix_equipements_created_at'), table_name='equipements')
    op.drop_index(op.f('ix_equipements_contrat_id'), table_name='equipements')
    op.drop_index(op.f('ix_equipements_code_interne'), table_name='equipements')
    op.drop_index(op.f('ix_equipements_client_id'), table_name='equipements')
    op.drop_index('idx_equipement_type_localisation', table_name='equipements')
    op.drop_index('idx_equipement_statut_criticite', table_name='equipements')
    op.drop_index('idx_equipement_created_type', table_name='equipements')
    op.drop_index('idx_equipement_client_statut', table_name='equipements')
    op.create_unique_constraint(op.f('equipements_nom_key'), 'equipements', ['nom'], postgresql_nulls_not_distinct=False)
    op.alter_column('equipements', 'type_equipement',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
    op.drop_index(op.f('ix_documents_nom_fichier'), table_name='documents')
    op.drop_index(op.f('ix_documents_intervention_id'), table_name='documents')
    op.drop_index(op.f('ix_documents_date_upload'), table_name='documents')
    op.drop_index('idx_document_intervention_upload', table_name='documents')
    op.alter_column('documents', 'date_upload',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.drop_index(op.f('ix_contrats_type_contrat'), table_name='contrats')
    op.drop_index(op.f('ix_contrats_statut'), table_name='contrats')
    op.drop_index(op.f('ix_contrats_numero_contrat'), table_name='contrats')
    op.drop_index(op.f('ix_contrats_mode_facturation'), table_name='contrats')
    op.drop_index(op.f('ix_contrats_is_active'), table_name='contrats')
    op.drop_index(op.f('ix_contrats_date_fin'), table_name='contrats')
    op.drop_index(op.f('ix_contrats_date_debut'), table_name='contrats')
    op.drop_index(op.f('ix_contrats_date_creation'), table_name='contrats')
    op.drop_index(op.f('ix_contrats_client_id'), table_name='contrats')
    op.drop_index('idx_contrat_statut', table_name='contrats')
    op.drop_index('idx_contrat_client_dates', table_name='contrats')
    op.create_index(op.f('ix_contrats_client'), 'contrats', ['client_id'], unique=False)
    op.create_unique_constraint(op.f('contrats_numero_contrat_key'), 'contrats', ['numero_contrat'], postgresql_nulls_not_distinct=False)
    op.drop_column('contrats', 'contact_responsable')
    op.drop_column('contrats', 'contact_client')
    op.drop_column('contrats', 'equipements_couverts')
    op.drop_column('contrats', 'heures_maintenance_utilisees')
    op.drop_column('contrats', 'heures_maintenance_incluses')
    op.drop_column('contrats', 'nb_interventions_utilisees')
    op.drop_column('contrats', 'nb_interventions_incluses')
    op.drop_column('contrats', 'penalites_retard')
    op.drop_column('contrats', 'taux_disponibilite')
    op.drop_column('contrats', 'temps_reponse_normal')
    op.drop_column('contrats', 'temps_reponse_urgence')
    op.drop_column('contrats', 'mode_facturation')
    op.drop_column('contrats', 'devise')
    op.drop_column('contrats', 'montant_mensuel')
    op.drop_column('contrats', 'montant_annuel')
    op.drop_column('contrats', 'date_renouvellement')
    op.drop_column('contrats', 'date_signature')
    op.drop_column('contrats', 'statut')
    op.drop_column('contrats', 'type_contrat')
    op.drop_column('contrats', 'description')
    op.drop_index(op.f('ix_competences_nom'), table_name='competences')
    op.drop_index(op.f('ix_competences_domaine'), table_name='competences')
    op.drop_index('idx_competence_nom_domaine', table_name='competences')
    op.drop_index('idx_competence_actif_domaine', table_name='competences')
    op.create_unique_constraint(op.f('competences_nom_key'), 'competences', ['nom'], postgresql_nulls_not_distinct=False)
    op.alter_column('competences', 'niveau_requis_minimum',
               existing_type=postgresql.ENUM('debutant', 'intermediaire', 'avance', 'expert', name='niveaucompetence'),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False,
               existing_server_default=sa.text("'intermediaire'::character varying"))
    op.alter_column('competences', 'domaine',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
    op.drop_index(op.f('ix_clients_ville'), table_name='clients')
    op.drop_index(op.f('ix_clients_user_id'), table_name='clients')
    op.drop_index(op.f('ix_clients_type_client'), table_name='clients')
    op.drop_index(op.f('ix_clients_secteur_activite'), table_name='clients')
    op.drop_index(op.f('ix_clients_numero_siret'), table_name='clients')
    op.drop_index(op.f('ix_clients_nom_entreprise'), table_name='clients')
    op.drop_index(op.f('ix_clients_niveau_service'), table_name='clients')
    op.drop_index(op.f('ix_clients_is_active'), table_name='clients')
    op.drop_index(op.f('ix_clients_date_creation'), table_name='clients')
    op.drop_index(op.f('ix_clients_code_postal'), table_name='clients')
    op.drop_index('idx_client_type_niveau', table_name='clients')
    op.drop_index('idx_client_secteur_ville', table_name='clients')
    op.drop_index('idx_client_nom_email', table_name='clients')
    op.drop_index('idx_client_actif_creation', table_name='clients')
    op.create_unique_constraint(op.f('clients_user_id_key'), 'clients', ['user_id'], postgresql_nulls_not_distinct=False)
    op.create_unique_constraint(op.f('clients_email_key'), 'clients', ['email'], postgresql_nulls_not_distinct=False)
    op.alter_column('clients', 'date_modification',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.drop_column('clients', 'instructions_particulieres')
    op.drop_column('clients', 'notes_commerciales')
    op.drop_column('clients', 'date_derniere_intervention')
    op.drop_column('clients', 'date_premier_contrat')
    op.drop_column('clients', 'nb_employes')
    op.drop_column('clients', 'chiffre_affaires_annuel')
    op.drop_column('clients', 'niveau_service')
    op.drop_column('clients', 'pays')
    op.drop_column('clients', 'region')
    op.drop_column('clients', 'ville')
    op.drop_column('clients', 'code_postal')
    op.drop_column('clients', 'adresse_ligne2')
    op.drop_column('clients', 'adresse_ligne1')
    op.drop_column('clients', 'fax')
    op.drop_column('clients', 'telephone_mobile')
    op.drop_column('clients', 'telephone')
    op.drop_column('clients', 'fonction_contact')
    op.drop_column('clients', 'prenom_contact')
    op.drop_column('clients', 'nom_contact')
    op.drop_column('clients', 'code_ape')
    op.drop_column('clients', 'numero_tva')
    op.drop_column('clients', 'numero_siret')
    op.drop_column('clients', 'taille_entreprise')
    op.drop_column('clients', 'secteur_activite')
    op.drop_column('clients', 'type_client')
    op.drop_column('clients', 'nom_commercial')
    op.drop_index(op.f('ix_mouvements_stock_user_id'), table_name='mouvements_stock')
    op.drop_index(op.f('ix_mouvements_stock_type_mouvement'), table_name='mouvements_stock')
    op.drop_index(op.f('ix_mouvements_stock_piece_detachee_id'), table_name='mouvements_stock')
    op.drop_index(op.f('ix_mouvements_stock_intervention_id'), table_name='mouvements_stock')
    op.drop_index(op.f('ix_mouvements_stock_id'), table_name='mouvements_stock')
    op.drop_index(op.f('ix_mouvements_stock_date_mouvement'), table_name='mouvements_stock')
    op.drop_index('idx_mouvement_type', table_name='mouvements_stock')
    op.drop_index('idx_mouvement_piece_date', table_name='mouvements_stock')
    op.drop_table('mouvements_stock')
    op.drop_index(op.f('ix_interventions_pieces_piece_detachee_id'), table_name='interventions_pieces')
    op.drop_index(op.f('ix_interventions_pieces_intervention_id'), table_name='interventions_pieces')
    op.drop_index(op.f('ix_interventions_pieces_date_utilisation'), table_name='interventions_pieces')
    op.drop_index('idx_intervention_piece', table_name='interventions_pieces')
    op.drop_table('interventions_pieces')
    op.drop_index(op.f('ix_factures_statut_paiement'), table_name='factures')
    op.drop_index(op.f('ix_factures_numero_facture'), table_name='factures')
    op.drop_index(op.f('ix_factures_id'), table_name='factures')
    op.drop_index(op.f('ix_factures_date_emission'), table_name='factures')
    op.drop_index(op.f('ix_factures_date_echeance'), table_name='factures')
    op.drop_index(op.f('ix_factures_date_creation'), table_name='factures')
    op.drop_index(op.f('ix_factures_contrat_id'), table_name='factures')
    op.drop_index('idx_facture_statut', table_name='factures')
    op.drop_index('idx_facture_contrat_echeance', table_name='factures')
    op.drop_table('factures')
    op.drop_index(op.f('ix_report_templates_report_type'), table_name='report_templates')
    op.drop_index(op.f('ix_report_templates_name'), table_name='report_templates')
    op.drop_index(op.f('ix_report_templates_id'), table_name='report_templates')
    op.drop_table('report_templates')
    op.drop_index(op.f('ix_pieces_detachees_stock_actuel'), table_name='pieces_detachees')
    op.drop_index(op.f('ix_pieces_detachees_reference'), table_name='pieces_detachees')
    op.drop_index(op.f('ix_pieces_detachees_nom'), table_name='pieces_detachees')
    op.drop_index(op.f('ix_pieces_detachees_is_active'), table_name='pieces_detachees')
    op.drop_index(op.f('ix_pieces_detachees_id'), table_name='pieces_detachees')
    op.drop_index(op.f('ix_pieces_detachees_date_creation'), table_name='pieces_detachees')
    op.drop_index('idx_piece_stock', table_name='pieces_detachees')
    op.drop_index('idx_piece_reference', table_name='pieces_detachees')
    op.drop_table('pieces_detachees')
    # ### end Alembic commands ###
